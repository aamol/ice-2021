docker run -p 27017:27017 --name mongo -d mongo:latest

mvnw clean install

java -jar target/accessing-mongodb-data-rest-0.0.1-SNAPSHOT.jar

curl -i -X POST -H "Content-Type:application/json" -d "{  \"firstName\" : \"Frodo\",  \"lastName\" : \"Baggins\" }" http://localhost:8080/people

curl http://localhost:8080/people

docker build -t k8s-demo-spring-mongo:1 .


Gives Error for Mongo ==> Show error
docker run k8s-demo-spring-mongo:1

docker run --link mongo:mongoserver -e SPRING_DATA_MONGODB_HOST=mongoserver -p 8080:8080 k8s-demo-spring-mongo:1

curl http://localhost:8080/people

Docker clean mongo and k8s-demo-spring-mongo


kubectl -n demo create deployment mongo --image=mongo:latest -o yaml

kubectl -n demo expose deployment mongo --port=27017 --target-port=27017 -o yaml



kubectl -n demo create deployment demo-app --image=k8s-demo-spring-mongo:1 -o yaml

kubectl -n demo expose deployment demo-app --port=8080 --target-port=8080 --type=LoadBalancer -o yaml